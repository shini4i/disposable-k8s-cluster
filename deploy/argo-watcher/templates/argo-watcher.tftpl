apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: argo-watcher
  namespace: argo-cd
  labels:
    managed-by: terraform
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    repoURL: https://shini4i.github.io/charts/
    chart: argo-watcher
    targetRevision: "${targetRevision}"
    helm:
      valuesObject:
        fullnameOverride: argo-watcher

        logLevel: DEBUG

        %{ if imageTag != "" }
        image:
          tag: ${imageTag}
        %{ endif }

        argo:
          url: http://argo-cd-server.argo-cd
          secretName: "${secretName}"
          updater:
            sshSecretName: "argo-watcher-secret"

        ingress:
          enabled: true
          annotations:
            %{ if !use_wildcard_certificate }
            cert-manager.io/cluster-issuer: "le-disposable-dns"
            %{ endif }
            %{ if local_setup  }
            external-dns.alpha.kubernetes.io/target: 127.0.0.1
            %{ endif }
          hosts:
            - host: argo-watcher.${domain}
              paths:
                - path: /
                  pathType: ImplementationSpecific
          tls:
            %{ if !use_wildcard_certificate }
            - secretName: argo-watcher-tls
            %{ else }
            - secretName: wildcard-${replace(domain, ".", "-")}-tls
            %{ endif }
              hosts:
                - argo-watcher.${domain}

        postgres:
          enabled: ${persistence_enabled}
          host: argo-watcher-psql
          name: watcher
          user: watcher
          secretName: ${postgresSecretName}
          secretKey: password

  destination:
    server: https://kubernetes.default.svc
    namespace: ${namespace}

  syncPolicy:
    automated:
      prune: true
      selfHeal: true
