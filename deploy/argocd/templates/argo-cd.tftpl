fullnameOverride: argo-cd

applicationSet:
  replicas: ${application_set_replicas}

notifications:
  enabled: false

global:
  domain: argo-cd.${domain}

server:
  ingress:
    enabled: true
    annotations:
      %{ if !use_wildcard_certificate }
      cert-manager.io/cluster-issuer: "le-disposable-dns"
      %{ endif }
%{ if local_setup == true }
      external-dns.alpha.kubernetes.io/target: 127.0.0.1
%{ endif ~}
    tls: false
    extraTls:
      - hosts:
          - argo-cd.${domain}
        %{ if !use_wildcard_certificate }
        secretName: argo-cd-tls
        %{ else }
        secretName: wildcard-${replace(domain, ".", "-")}-tls
        %{ endif }
%{ if argo_rollouts_enabled == true }
  extensions:
    enabled: true
    extensionList:
      - name: rollout-extension
        env:
          - name: EXTENSION_URL
            value: https://github.com/argoproj-labs/rollout-extension/releases/download/v0.3.7/extension.tar
%{ endif ~}

%{ if use_custom_argocd_image == true }
repoServer:
  image:
    repository: ${custom_argocd_image}
    tag: ${custom_argocd_image_tag}
    imagePullPolicy: IfNotPresent

  env:
    - name: HELM_PLUGINS
      value: "/home/argocd/.local/share/helm/plugins/"
%{ endif ~}

configs:
  params:
    server.insecure: true

  cm:
   url: https://argo-cd.${domain}
   exec.enabled: "true"

   # this should not be set in production, but for testing purposes it's fine
   accounts.admin: apiKey

%{ if local_setup == true }
   resource.customizations: |
     networking.k8s.io/Ingress:
       health.lua: |
         hs = {}
         hs.status = "Healthy"
         hs.message = "Skipped for KIND based ArgoCD"
         return hs
%{ endif ~}
